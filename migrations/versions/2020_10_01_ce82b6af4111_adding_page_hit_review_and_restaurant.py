"""adding page hit, review and restaurant

Revision ID: ce82b6af4111
Revises:
Create Date: 2020-10-01 14:55:34.142052

"""
import sqlalchemy as sa
from alembic import op


# revision identifiers, used by Alembic.
revision = "ce82b6af4111"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "page_hit",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "insert_datetime",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("ip_address", sa.String(), nullable=True),
        sa.Column("url", sa.String(), nullable=False),
        sa.Column("user", sa.String(), nullable=True),
        sa.Column("status_code", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_page_hit_id"), "page_hit", ["id"], unique=False)
    op.create_index(
        op.f("ix_page_hit_insert_datetime"),
        "page_hit",
        ["insert_datetime"],
        unique=False,
    )
    op.create_table(
        "restaurant",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "insert_datetime",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("latitude", sa.Float(), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("url", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_restaurant_id"), "restaurant", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_restaurant_insert_datetime"),
        "restaurant",
        ["insert_datetime"],
        unique=False,
    )
    op.create_index(
        op.f("ix_restaurant_name"), "restaurant", ["name"], unique=False
    )
    op.create_table(
        "review",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "insert_datetime",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("restaurant_id", sa.Integer(), nullable=False),
        sa.Column("comment", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(["restaurant_id"], ["restaurant.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_review_id"), "review", ["id"], unique=False)
    op.create_index(
        op.f("ix_review_insert_datetime"),
        "review",
        ["insert_datetime"],
        unique=False,
    )
    op.create_index(
        op.f("ix_review_restaurant_id"),
        "review",
        ["restaurant_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_review_restaurant_id"), table_name="review")
    op.drop_index(op.f("ix_review_insert_datetime"), table_name="review")
    op.drop_index(op.f("ix_review_id"), table_name="review")
    op.drop_table("review")
    op.drop_index(op.f("ix_restaurant_name"), table_name="restaurant")
    op.drop_index(
        op.f("ix_restaurant_insert_datetime"), table_name="restaurant"
    )
    op.drop_index(op.f("ix_restaurant_id"), table_name="restaurant")
    op.drop_table("restaurant")
    op.drop_index(op.f("ix_page_hit_insert_datetime"), table_name="page_hit")
    op.drop_index(op.f("ix_page_hit_id"), table_name="page_hit")
    op.drop_table("page_hit")
    # ### end Alembic commands ###
